@using Autofac
@using AutoMapper
@using Kendo.Mvc.UI
@using RaceData.Dal.DataManagers
@using RaceData.Dal.DTO
@using RaceData.Dal.POCO
@using RaceData.Service
<style>
    .k-grid {
        overflow-x: hidden;
        overflow-y: hidden;
    }
</style>
@{
    Html.Kendo()
        .Grid<DTORaceType>()
        .Name("RaceTypeGrid")
        .HtmlAttributes(new { style = "height:370px;" })
        .Pageable()
        .Sortable()
        .Scrollable()
        .ToolBar(t=>t.Create())
        .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("RaceTypeEditor"))
        .Columns(c =>
                 {
                     c.Bound(p => p.Name).Title("<b>Name</b>").Width(200);
                     c.Bound(p => p.IsGroup).ClientTemplate("#=getgroup(data)#").Title("<b>Is Group</b>");
                     c.Bound(p => p.Country).ClientTemplate("#=Country?Country.Name:''#").Title("<b>Country</b>").Width(200);
                     c.Command(com => com.Edit());
                 })
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Model(model =>
               {
                   model.Id(p => p.Id);
                   model.Field(p => p.Country).DefaultValue(Mapper.Map<Country, DTOCountry>(SessionService.DbContainer.Resolve<CountrysDataManager>().GetAll().OrderBy(p=>p.Id).FirstOrDefault()));
               })
        .Read(read => read.Action("ReadRT", "Race"))
        .Create(create=>create.Action("CreateRT", "Race"))
        .Update(update=>update.Action("UpdateRT", "Race"))
    ).Filterable().AutoBind(true).Render();
}

<script type="text/javascript">
    function getgroup(data) {
        return kendo.format('<input type="checkbox" class="k-checkbox k-readonly" {0} disabled>', (data && data.IsGroup ? 'checked' : ''));
    }
</script>

